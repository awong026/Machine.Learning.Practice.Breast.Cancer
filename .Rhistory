######################################################################################
#Machine Learning practice
#Objective: Create model to predict whether a cancer is malignant or benign from biopsy details
######################################################################################
#Import data
library(mlbench)
data(BreastCancer)
dataset <- BreastCancer
######################################################################################
#EDA
######################################################################################
#Check out dim of dataset
dim(dataset)
#View dataset
View(dataset) #datasets looks to be full of nominal/ordinal variables
#Check out type of each attribute
sapply(dataset, class)
#Check out first 5 rows
head(dataset)
#Check out bottom 5 rows
tail(dataset)
#Check out levels of column with malignant or benign to make sure those are the only things there
levels(dataset$Class)
#See what percentage of data is either m or b
percentage <- prop.table(table(dataset$Class)) * 100
cbind(freq = table(dataset$Clas), percentage = percentage)
#Check out structure of dataset
str(dataset)
#Get a summary of dataset
summary(dataset)
##########################################################################
#Create train and test set
############################################################################
library(caret)
validation_index <- createDataPartition(dataset$Class, p = .8, list = F)
test <- dataset[-validation_index,]
dataset <- dataset[validation_index,]
##########################################################################
#Create plots to visualize dataset and look for patterns
##########################################################################
#Split predictor and response variable of data (x = predictors, y = response (Class))
x = dataset[,2:10] #Didn't include ID since it is neither a predictor or response varible
#Split vector and factor attributes
xv = dataset[,2:5]
xf = dataset[,6:9]
y = dataset[,11]
#Create univariate boxplot of numeric data to see how each attribute is structured
par(mfrow = c(1,4))
for(i in 2:5) {
boxplot(x[,i], main = names(dataset)[i])
}
#Create histogram with stat = "count" to get a visual of factor attributes
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
plot_data_column = function(data, column)
ggplot(data = x, aes_string(x = column)) + geom_histogram(stat = "count") + xlab(column)
myplots2 <- lapply(colnames(x), plot_data_column, data = x)
do.call(grid.arrange, c(myplots2, ncol = 3))
##Multivariate plots to see how attributes interact
for(i in 2:9){
print(ggplot(dataset, aes(x= dataset[,i], fill = Class)) + geom_histogram(stat ="count") + facet_grid(.~Class) + xlab(names(dataset)[i]))
}
#Another Way to get previous chart (Multivariate)#
plot_multivariate = function(data, column)
ggplot(data = dataset, aes_string(x= column)) + geom_histogram(stat ="count") + facet_grid(.~Class) + xlab(column)
multiplots <- lapply(colnames(dataset), plot_multivariate, data = dataset)
do.call(grid.arrange, c(multiplots, ncol = 3))
